---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: false
# Where to look for state libraries
StatesLibraries:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@"
# Where to look for state files
StatesFiles:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@/data"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@/data"
# If true, state factory will be more verbose
VerboseStateFactory: false
# Additional robots to load
robots:
  ground:
    module: env/ground
  tilted_board:
    module: env/ground
    init_pos:
      translation: [7.4, 0.0, 7.8]
      rotation: [0.0, -0.80, 0.0]
# General constraints, always on
constraints:
- type: contact
#- type: dynamics
  damper: [0.1, 0.01, 0.5]
- type: compoundJoint
# Collision constraint
collisions:
- type: collision
  useMinimal: true
#- type: collision
#  r1: hrp4
#  r2: tilted_board
#  collisions:
#    - body1: L_WRIST_Y_LINK
#      body2: ground
#      iDist: 0.5
#      sDist: 0.02
#      damping: 0.0
# Initial set of contacts
contacts:
- r1: hrp4
  r2: ground
  r1Surface: LeftFoot
  r2Surface: AllGround
  dof: [1,1,1,1,1,1]
- r1: hrp4
  r2: ground
  r1Surface: RightFoot
  r2Surface: AllGround
  dof: [1,1,1,1,1,1]
      #[1,1,1,1,1,1]
      #[0,0,0,0,0,0]

# Some options for a specific robot
hrp4:
  posture:
    stiffness: 1
    weight: 100
  #ff:
    #stiffness: 2
    #weight: 100

# Implement some additional text states
states:
  # Keep the CoM centered between the feet, and the chest upright
  StandingBase:
    base: MetaTasks
    tasks:
      CoM:
        type: com
        above: [LeftFoot, RightFoot]
        weight: 2000
        stiffness: 5
      KeepChest:
        type: orientation
        body: R_HIP_P_LINK
        weight: 100
        stiffness: 1
  
  # Trajectory to bring hand close to the wall
  RightHandToWall:
    base: StandingBase
    tasks:
      RightHandTrajectory:
        type: bspline_trajectory
        setupMode: false
        surface: RightHand
        weight: 1000
        stiffness: 50
        duration: 6
        dimWeight: [1,1,1, 1, 0.5, 0.5]
        displaySamples: 100
        target:
          translation: [0.4, -0.35, 0.95]
          rotation: [-0.908, 0.0, 1.57]
        controlPoints: [[0.0, -0.5, 0.85]]
        oriWaypoints: [3.5, [-0.785, 0.0, 1.57]]
        completion:
          timeElapsed: true
  
  RightHand::Contact:
    base: StandingBase
    AddContacts:
      - r1: hrp4
        r2: tilted_board
        r1Surface: RightHand
        r2Surface: AllGround
        dof: [0, 0, 0, 0, 0, 0]

  # Increase applied force until we reach 20N
  RightHandPushAdmittance:
    base: StandingBase
    tasks:
      RightHandAdmittance:
        type: admittance
        surface: RightHand
        stiffness: [10, 10, 10, 10, 10, 1]
        damping: [6.3, 6.3, 6.3, 6.3, 6.3, 300]
        admittance: [0,0,0,0,0,0.001]
        maxVel:
          linear: [0.2, 0.2, 0.5]
          angular: [0.2, 0.2, 0.2]
        wrench:
         force: [0, 0, -20]
         couple: [0, 0, 0]
        targetRotation: [1.57, 0, 1.57]
        completion:
          wrench:
            force: [.nan, .nan, -20]
            couple: [.nan, .nan, .nan]

  # Keep the Right Hand and wait for the GUI to remove it
  KeepRightHand:
    base: Parallel
    states: [RightHandPushAdmittance, RemoveHand]

  # Decrease applied force until we reach near zero force
  RightHandReleaseAdmittance:
    base: RightHandPushAdmittance
    tasks:
      RightHandAdmittance:
        wrench:
         force: [0, 0, -1]
         couple: [0, 0, 0]
        completion:
          wrench:
            force: [.nan, .nan, -1]
            couple: [.nan, .nan, .nan]

  # Move hand 10cm back
  # Add collision avoidance between right hand and the wall.
  # Note that the wall position was updated using UpdateWallFromKinematics and thus corresponds to the actual wall position
  RightHandMoveBack:
    base: StandingBase
    tasks:
      RightHandMoveBack:
        type: surfaceTransform
        weight: 1000
        stiffness: 5
        duration: 6
        surface: RightHand
        moveWorld:
          translation: [-0.1, 0, 0]
          rotation: [0,0,0]
        completion:
          timeElapsed: true
    AddCollisionsAfter:
      - r1: hrp4
        r2: tilted_board
        collisions:
          - body1: R_WRIST_Y_LINK
            body2: ground
            iDist: 0.15
            sDist: 0.05
            damping: 0.0

  # Go back to halfsitting
  StandingHalfSitting:
    base: Parallel
    states: [StandingBase, HalfSitting]
    configs:
      HalfSitting:
        stiffness: 5
        completion:
          eval: 0.01


# Transitions map
transitions:
- [MscController_Initial,      OK, RightHandToWall, Auto]
- [RightHandToWall,            OK, RemoveHand, Auto]
#- [RightHand::Contact,         OK, RemoveHand, Auto]
- [RemoveHand,                 OK, RightHandReleaseAdmittance, Auto]
- [RightHandReleaseAdmittance, OK, RightHandMoveBack, Auto]
- [RightHandMoveBack,          OK, StandingHalfSitting, Auto]

# Initial state
init: MscController_Initial
#Observer
ObserverPipelines:
  name: "MscControllerObserverPipeline"
  gui: true
  observers:
    - type: Encoder
      update: true
    - type: Attitude
      update: true
    - type: BodySensor
      update: false
      config:
        bodySensor: FloatingBase
